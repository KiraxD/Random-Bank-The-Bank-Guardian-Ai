version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:14-alpine
    container_name: random-bank-postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: random_bank
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - random-bank-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: random-bank-backend
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - NODE_ENV=development
      - PORT=3001
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_NAME=random_bank
      - JWT_SECRET=random-bank-secret-key
    ports:
      - "3001:3001"
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - random-bank-network
    command: npm run dev

  # ML Service for Fraud Detection
  ml-service:
    build:
      context: ./ml-service
      dockerfile: Dockerfile
    container_name: random-bank-ml-service
    ports:
      - "8000:8000"
    volumes:
      - ./ml-service:/app
    networks:
      - random-bank-network

  # Frontend React Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: random-bank-frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
      - ml-service
    networks:
      - random-bank-network
    command: npm start

networks:
  random-bank-network:
    driver: bridge

volumes:
  postgres_data:
