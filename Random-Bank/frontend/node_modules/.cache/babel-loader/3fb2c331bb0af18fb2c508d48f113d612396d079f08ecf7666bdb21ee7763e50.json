{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KIIT0001\\\\Desktop\\\\Persona Final\\\\Random-Bank\\\\frontend\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport jwt_decode from 'jwt-decode';\nimport api from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n  useEffect(() => {\n    const initAuth = async () => {\n      if (token) {\n        try {\n          // Check if token is expired\n          const decodedToken = jwt_decode(token);\n          const currentTime = Date.now() / 1000;\n          if (decodedToken.exp < currentTime) {\n            // Token is expired\n            handleLogout();\n            toast.error('Your session has expired. Please log in again.');\n          } else {\n            // Set auth header for all future requests\n            api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n\n            // Fetch user profile\n            const response = await api.get('/auth/profile');\n            setCurrentUser(response.data);\n            setIsAuthenticated(true);\n          }\n        } catch (error) {\n          console.error('Auth initialization error:', error);\n          handleLogout();\n        }\n      }\n      setIsLoading(false);\n    };\n    initAuth();\n  }, [token]);\n  const handleLogin = async credentials => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      const {\n        accessToken,\n        user\n      } = response.data;\n\n      // Save token to localStorage\n      localStorage.setItem('token', accessToken);\n\n      // Set auth header for all future requests\n      api.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n      setToken(accessToken);\n      setCurrentUser(user);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response, _error$response$data;\n      const message = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Login failed. Please try again.';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const handleRegister = async userData => {\n    try {\n      const response = await api.post('/auth/signup', userData);\n      const {\n        accessToken,\n        user\n      } = response.data;\n\n      // Save token to localStorage\n      localStorage.setItem('token', accessToken);\n\n      // Set auth header for all future requests\n      api.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n      setToken(accessToken);\n      setCurrentUser(user);\n      setIsAuthenticated(true);\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      const message = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Registration failed. Please try again.';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const handleLogout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n\n    // Remove auth header\n    delete api.defaults.headers.common['Authorization'];\n    setToken(null);\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n  };\n  const updateProfile = async userData => {\n    try {\n      const response = await api.put('/users/profile', userData);\n      setCurrentUser(response.data);\n      toast.success('Profile updated successfully');\n      return {\n        success: true\n      };\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      const message = ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to update profile';\n      toast.error(message);\n      return {\n        success: false,\n        message\n      };\n    }\n  };\n  const value = {\n    currentUser,\n    isAuthenticated,\n    isLoading,\n    login: handleLogin,\n    register: handleRegister,\n    logout: handleLogout,\n    updateProfile\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"uosTWGNXcUlKz2zIKE4zy+rVR1w=\");\n_c = AuthProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","toast","jwt_decode","api","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","currentUser","setCurrentUser","isAuthenticated","setIsAuthenticated","isLoading","setIsLoading","token","setToken","localStorage","getItem","initAuth","decodedToken","currentTime","Date","now","exp","handleLogout","error","defaults","headers","common","response","get","data","console","handleLogin","credentials","post","accessToken","user","setItem","success","_error$response","_error$response$data","message","handleRegister","userData","_error$response2","_error$response2$data","removeItem","updateProfile","put","_error$response3","_error$response3$data","value","login","register","logout","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/KIIT0001/Desktop/Persona Final/Random-Bank/frontend/src/context/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\nimport { toast } from 'react-toastify';\nimport jwt_decode from 'jwt-decode';\nimport api from '../services/api';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState(null);\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [token, setToken] = useState(localStorage.getItem('token') || null);\n\n  useEffect(() => {\n    const initAuth = async () => {\n      if (token) {\n        try {\n          // Check if token is expired\n          const decodedToken = jwt_decode(token);\n          const currentTime = Date.now() / 1000;\n          \n          if (decodedToken.exp < currentTime) {\n            // Token is expired\n            handleLogout();\n            toast.error('Your session has expired. Please log in again.');\n          } else {\n            // Set auth header for all future requests\n            api.defaults.headers.common['Authorization'] = `Bearer ${token}`;\n            \n            // Fetch user profile\n            const response = await api.get('/auth/profile');\n            setCurrentUser(response.data);\n            setIsAuthenticated(true);\n          }\n        } catch (error) {\n          console.error('Auth initialization error:', error);\n          handleLogout();\n        }\n      }\n      setIsLoading(false);\n    };\n\n    initAuth();\n  }, [token]);\n\n  const handleLogin = async (credentials) => {\n    try {\n      const response = await api.post('/auth/login', credentials);\n      const { accessToken, user } = response.data;\n      \n      // Save token to localStorage\n      localStorage.setItem('token', accessToken);\n      \n      // Set auth header for all future requests\n      api.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n      \n      setToken(accessToken);\n      setCurrentUser(user);\n      setIsAuthenticated(true);\n      \n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Login failed. Please try again.';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  const handleRegister = async (userData) => {\n    try {\n      const response = await api.post('/auth/signup', userData);\n      const { accessToken, user } = response.data;\n      \n      // Save token to localStorage\n      localStorage.setItem('token', accessToken);\n      \n      // Set auth header for all future requests\n      api.defaults.headers.common['Authorization'] = `Bearer ${accessToken}`;\n      \n      setToken(accessToken);\n      setCurrentUser(user);\n      setIsAuthenticated(true);\n      \n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Registration failed. Please try again.';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  const handleLogout = () => {\n    // Remove token from localStorage\n    localStorage.removeItem('token');\n    \n    // Remove auth header\n    delete api.defaults.headers.common['Authorization'];\n    \n    setToken(null);\n    setCurrentUser(null);\n    setIsAuthenticated(false);\n  };\n\n  const updateProfile = async (userData) => {\n    try {\n      const response = await api.put('/users/profile', userData);\n      setCurrentUser(response.data);\n      toast.success('Profile updated successfully');\n      return { success: true };\n    } catch (error) {\n      const message = error.response?.data?.message || 'Failed to update profile';\n      toast.error(message);\n      return { success: false, message };\n    }\n  };\n\n  const value = {\n    currentUser,\n    isAuthenticated,\n    isLoading,\n    login: handleLogin,\n    register: handleRegister,\n    logout: handleLogout,\n    updateProfile\n  };\n\n  return (\n    <AuthContext.Provider value={value}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport default AuthContext;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}